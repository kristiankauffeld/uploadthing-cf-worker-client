{"version":3,"sources":["../src/h3.ts"],"sourcesContent":["import type { H3Event } from \"h3\";\nimport {\n  assertMethod,\n  defineEventHandler,\n  getRequestHeaders,\n  getRequestURL,\n  readBody,\n  setHeaders,\n  setResponseStatus,\n} from \"h3\";\n\nimport type { Json } from \"@uploadthing/shared\";\nimport { getStatusCodeFromError, UploadThingError } from \"@uploadthing/shared\";\n\nimport { UPLOADTHING_VERSION } from \"./constants\";\nimport { defaultErrorFormatter } from \"./internal/error-formatter\";\nimport {\n  buildPermissionsInfoHandler,\n  buildRequestHandler,\n} from \"./internal/handler\";\nimport type { RouterWithConfig } from \"./internal/handler\";\nimport type { FileRouter } from \"./internal/types\";\nimport type { CreateBuilderOptions } from \"./internal/upload-builder\";\nimport { createBuilder } from \"./internal/upload-builder\";\n\nexport type { FileRouter } from \"./internal/types\";\n\nexport const createUploadthing = <TErrorShape extends Json>(\n  opts?: CreateBuilderOptions<TErrorShape>,\n) =>\n  createBuilder<\n    { req: undefined; res: undefined; event: H3Event },\n    TErrorShape\n  >(opts);\n\nexport const createH3EventHandler = <TRouter extends FileRouter>(\n  opts: RouterWithConfig<TRouter>,\n) => {\n  const requestHandler = buildRequestHandler(opts);\n  const getBuildPerms = buildPermissionsInfoHandler<TRouter>(opts);\n\n  return defineEventHandler(async (event) => {\n    assertMethod(event, [\"GET\", \"POST\"]);\n    setHeaders(event, { \"x-uploadthing-version\": UPLOADTHING_VERSION });\n\n    // GET\n    if (event.method === \"GET\") {\n      return getBuildPerms();\n    }\n\n    // POST\n    const response = await requestHandler({\n      req: {\n        url: getRequestURL(event).href,\n        headers: getRequestHeaders(event),\n        json: () => Promise.resolve(readBody(event)),\n      },\n      event,\n    });\n\n    if (response instanceof UploadThingError) {\n      setResponseStatus(event, getStatusCodeFromError(response));\n      const errorFormatter =\n        opts.router[Object.keys(opts.router)[0]]?._def.errorFormatter ??\n        defaultErrorFormatter;\n      return errorFormatter(response) as unknown;\n    }\n\n    if (response.status !== 200) {\n      // We messed up - this should never happen\n      setResponseStatus(event, 500);\n      return \"An unknown error occurred\";\n    }\n\n    return response.body;\n  });\n};\n"],"mappings":";;;;;;;;;;AACA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAGP,SAAS,wBAAwB,wBAAwB;AAelD,IAAM,oBAAoB,CAC/B,SAEA,cAGE,IAAI;AAED,IAAM,uBAAuB,CAClC,SACG;AACH,QAAM,iBAAiB,oBAAoB,IAAI;AAC/C,QAAM,gBAAgB,4BAAqC,IAAI;AAE/D,SAAO,mBAAmB,OAAO,UAAU;AAzC7C;AA0CI,iBAAa,OAAO,CAAC,OAAO,MAAM,CAAC;AACnC,eAAW,OAAO,EAAE,yBAAyB,oBAAoB,CAAC;AAGlE,QAAI,MAAM,WAAW,OAAO;AAC1B,aAAO,cAAc;AAAA,IACvB;AAGA,UAAM,WAAW,MAAM,eAAe;AAAA,MACpC,KAAK;AAAA,QACH,KAAK,cAAc,KAAK,EAAE;AAAA,QAC1B,SAAS,kBAAkB,KAAK;AAAA,QAChC,MAAM,MAAM,QAAQ,QAAQ,SAAS,KAAK,CAAC;AAAA,MAC7C;AAAA,MACA;AAAA,IACF,CAAC;AAED,QAAI,oBAAoB,kBAAkB;AACxC,wBAAkB,OAAO,uBAAuB,QAAQ,CAAC;AACzD,YAAM,mBACJ,UAAK,OAAO,OAAO,KAAK,KAAK,MAAM,EAAE,CAAC,CAAC,MAAvC,mBAA0C,KAAK,mBAC/C;AACF,aAAO,eAAe,QAAQ;AAAA,IAChC;AAEA,QAAI,SAAS,WAAW,KAAK;AAE3B,wBAAkB,OAAO,GAAG;AAC5B,aAAO;AAAA,IACT;AAEA,WAAO,SAAS;AAAA,EAClB,CAAC;AACH;","names":[]}