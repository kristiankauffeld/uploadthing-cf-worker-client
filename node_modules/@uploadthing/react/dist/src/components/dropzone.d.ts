import type { ContentField, StyleField } from "uploadthing/client";
import type { ErrorMessage, FileRouter } from "uploadthing/server";
import type { UploadthingComponentProps } from "../types";
type DropzoneStyleFieldCallbackArgs = {
    __runtime: "react";
    ready: boolean;
    isUploading: boolean;
    uploadProgress: number;
    fileTypes: string[];
    isDragActive: boolean;
};
export type UploadDropzoneProps<TRouter extends FileRouter, TEndpoint extends keyof TRouter> = UploadthingComponentProps<TRouter, TEndpoint> & {
    appearance?: {
        container?: StyleField<DropzoneStyleFieldCallbackArgs>;
        uploadIcon?: StyleField<DropzoneStyleFieldCallbackArgs>;
        label?: StyleField<DropzoneStyleFieldCallbackArgs>;
        allowedContent?: StyleField<DropzoneStyleFieldCallbackArgs>;
        button?: StyleField<DropzoneStyleFieldCallbackArgs>;
    };
    content?: {
        uploadIcon?: ContentField<DropzoneStyleFieldCallbackArgs>;
        label?: ContentField<DropzoneStyleFieldCallbackArgs>;
        allowedContent?: ContentField<DropzoneStyleFieldCallbackArgs>;
        button?: ContentField<DropzoneStyleFieldCallbackArgs>;
    };
    className?: string;
    config?: {
        mode?: "auto" | "manual";
        appendOnPaste?: boolean;
    };
};
export declare function UploadDropzone<TRouter extends FileRouter, TEndpoint extends keyof TRouter>(props: FileRouter extends TRouter ? ErrorMessage<"You forgot to pass the generic"> : UploadDropzoneProps<TRouter, TEndpoint>): import("react/jsx-runtime").JSX.Element;
export {};
//# sourceMappingURL=dropzone.d.ts.map